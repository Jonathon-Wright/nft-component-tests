<?xml version='1.0' encoding='UTF-8'?>
<jmeterTestPlan>
  <hashTree>
    <TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="Converted Test Plan">
      <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="TestPlan.user_defined_variables" testclass="Arguments"/>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree"/>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookies">
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers">
        <collectionProp name="HeaderManager.headers">
          <elementProp elementType="Header" name="">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:64.0) Gecko/20100101 Firefox/64.0</stringProp>
          </elementProp>
          <elementProp elementType="Header" name="">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Defaults">
        <elementProp elementType="Arguments" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments" testname="user_defined"/>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.domain">auth.integration1.volo2.com</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ThreadGroup">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp elementType="LoopController" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <stringProp name="ThreadGroup.start_time"></stringProp>
        <stringProp name="ThreadGroup.end_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
      </ThreadGroup>
      <hashTree type="tg">
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://detectportal.firefox.com/success.txt">
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers">
            <collectionProp name="HeaderManager.headers">
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Referer https://app.integration1.volo2.com/4303/"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers">
            <collectionProp name="HeaderManager.headers">
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://app.integration1.volo2.com/4303/</stringProp>
              </elementProp>
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://auth.integration1.volo2.com/auth/realms/4303/protocol/openid-connect/auth">
            <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp elementType="HTTPArgument" name="b'client_id">
                  <stringProp name="Argument.name">b'client_id</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="redirect_uri">
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://app.integration1.volo2.com/4303/</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="state">
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">367d6a60-6fdc-4add-ada9-0952a1ecdae4</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="response_mode">
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">fragment</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="response_type">
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="scope">
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="nonce">
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8c229258-2a68-4b71-9c24-8a80ca05838d</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="prompt">
                  <stringProp name="Argument.name">prompt</stringProp>
                  <stringProp name="Argument.value">none'</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/auth/realms/4303/protocol/openid-connect/auth</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://auth.integration1.volo2.com/auth/realms/4303/protocol/openid-connect/auth">
            <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp elementType="HTTPArgument" name="b'client_id">
                  <stringProp name="Argument.name">b'client_id</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="redirect_uri">
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://app.integration1.volo2.com/4303/</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="state">
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">632dd0bf-3f8d-4fc6-9810-9b3e9adc6871</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="response_mode">
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">fragment</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="response_type">
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="scope">
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp elementType="HTTPArgument" name="nonce">
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">d454a7d2-01a6-4e0b-b767-65000399c933'</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/auth/realms/4303/protocol/openid-connect/auth</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
